#include "stepper.h"
#include <util/delay.h>
#include <avr/io.h> /* For the REGSTERS */
#define MOTOR_PORT  PORTD
#define MOTOR_DDR   DDRD

#define PIN_1 PD3
#define PIN_2 PD4
#define PIN_3 PD5
#define PIN_4 PD6

const uint8 step_sequence[8] = {0b0001, 0b0011, 0b0010, 0b0110, 0b0100, 0b1100, 0b1000, 0b1001};

void stepper_init(void) {
    MOTOR_DDR |= (1 << PIN_1) | (1 << PIN_2) | (1 << PIN_3) | (1 << PIN_4);
    MOTOR_PORT &= ~((1 << PIN_1) | (1 << PIN_2) | (1 << PIN_3) | (1 << PIN_4));
}

void rotate_motor(Direction direction, uint16 angle) {
    uint16 steps = angle;

    // Calculate the number of steps to move
    uint16 steps_to_move = steps;

    // Calculate the number of steps in the sequence
    uint8 sequence_steps = sizeof(step_sequence) / sizeof(step_sequence[0]);

    for (uint16 i = 0; i < steps_to_move; i++) {
        uint8 step_idx = i % sequence_steps;

        if (direction == CW) {
            step_idx++;
            if (step_idx >= sequence_steps) {
                step_idx = 0;
            }
        } else {
            if (step_idx == 0) {
                step_idx = sequence_steps - 1;
            } else {
                step_idx--;
            }
        }

        MOTOR_PORT = (MOTOR_PORT & 0xF0) | (step_sequence[step_idx] & 0x0F);
        _delay_ms(10); // Adjust delay as needed
    }

    // Turn off all motor coils
    MOTOR_PORT &= 0xF0;
}
